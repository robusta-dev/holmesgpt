certificate: "" # base64 encoded
logLevel: INFO

additionalEnvVars: []
additional_env_vars: []
imagePullSecrets: []
podAnnotations: {}

replicas: 1

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPU: "60"
  targetMemory: ""
  behavior: {}

image: holmes:0.0.0
registry: robustadev

sentryDSN: https://51f9cd9bd2fdee16144db08fc423cd3b@o1120648.ingest.us.sentry.io/4508799804702720
enableTelemetry: true

enableAccountsCreate: true
revisionHistoryLimit: 10

createServiceAccount: true
customServiceAccountName: ""

customClusterRoleRules: []

enablePostProcessing: false
postProcessingPrompt: "builtin://generic_post_processing.jinja2"
openshift: false

affinity: {}
nodeSelector: ~
tolerations: []

serviceAccount:
  imagePullSecrets: []
  annotations: {}

toolsets:
  kubernetes/core:
    enabled: true
  kubernetes/logs:
    enabled: true
  robusta:
    enabled: true
  internet:
    enabled: true
  prometheus/metrics:
    enabled: true
mcp_servers: {}

resources:
  requests:
    cpu: 100m
    memory: 2048Mi
  limits:
    memory: 2048Mi

additionalVolumes: []
additionalVolumeMounts: []

priorityClassName: ""

modelList: {}

# MCP (Model Context Protocol) Add-ons
# These are optional MCP servers that can be deployed alongside Holmes
mcpAddons:
  aws:
    enabled: false

    # Service account configuration for IRSA (IAM Roles for Service Accounts)
    serviceAccount:
      create: true
      name: "aws-api-mcp-sa"
      annotations: {}  # Add EKS IRSA annotations here, e.g., eks.amazonaws.com/role-arn

    image: "aws-api-mcp-server:1.0.0"
    registry: "us-central1-docker.pkg.dev/genuine-flight-317411/devel"

    resources:
      requests:
        memory: "512Mi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "500m"

    config:
      region: "us-east-1"
      readOnlyMode: true   # Set to false to allow write operations (use with caution)
      namespace: ""        # Kubernetes namespace (defaults to release namespace if empty)

    # Network policy to restrict access to MCP server
    networkPolicy:
      enabled: true  # Enable network isolation (recommended)

    # Custom LLM instructions (optional)
    # Leave empty to use default comprehensive instructions
    # Set to override the default investigation patterns and guidelines
    llmInstructions: ""

    nodeSelector: {}
    tolerations: []
    affinity: {}
