expected_output:
  - Split head due to network policy
before_test: |
  kubectl create namespace rabbitmq
  helm install rabbitmq oci://registry-1.docker.io/bitnamicharts/rabbitmq -n rabbitmq -f ../rabbitmq.yaml
  sleep 30
  # Label the Pods for Easier Selection
  kubectl label pod -n rabbitmq rabbitmq-0 partition=a --overwrite
  kubectl label pod -n rabbitmq rabbitmq-1 partition=b --overwrite
  kubectl label pod -n rabbitmq rabbitmq-2 partition=b --overwrite
  sleep 30
  # Label the Pods for Easier Selection
  kubectl apply -f netpol-partition-a.yaml -n rabbitmq
  kubectl apply -f netpol-partition-b.yaml -n rabbitmq
after_test: |
  kubectl delete networkpolicy -n rabbitmq allow-partition-a-only
  kubectl delete networkpolicy -n rabbitmq allow-partition-b-only
#  helm uninstall rabbitmq -n rabbitmq
#  kubectl delete namespace rabbitmq
evaluation:
  correctness: 1


# dw3Aj8DnesZ8toKl

# k get pods -n rabbitmq -o wide
# NAME         READY   STATUS    RESTARTS   AGE     IP            NODE                      NOMINATED NODE   READINESS GATES
# rabbitmq-0   1/1     Running   0          7m5s    10.244.1.28   kind-double-node-worker   <none>           <none>
# rabbitmq-1   1/1     Running   0          5m45s   10.244.1.30   kind-double-node-worker   <none>           <none>
# rabbitmq-2   1/1     Running   0          4m21s   10.244.1.32   kind-double-node-worker   <none>           <none>


# iptables -I FORWARD -s 10.244.1.28 -d 10.244.1.30 -p tcp -j DROP
# iptables -I FORWARD -s 10.244.1.30   -d 10.244.1.28 -p tcp -j DROP

# iptables -I FORWARD -s 10.244.1.28 -d 10.244.1.32 -p tcp -j DROP
# iptables -I FORWARD -s 10.244.1.32   -d 10.244.1.28 -p tcp -j DROP



iptables -D FORWARD -s 10.244.1.28 -d 10.244.1.30 -p tcp -j DROP
iptables -D FORWARD -s 10.244.1.30   -d 10.244.1.28 -p tcp -j DROP
iptables -D FORWARD -s 10.244.1.28 -d 10.244.1.32 -p tcp -j DROP
iptables -D FORWARD -s 10.244.1.32   -d 10.244.1.28 -p tcp -j DROP


# worker1: 1c65c66aa7c0
# worker2: 9577124a468c
# worker3: f5a6ff172179

# docker exec -it kind-calico-worker bash
# docker exec -it kind-calico-worker2 bash
# docker exec -it kind-calico-worker3 bash