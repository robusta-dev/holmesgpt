{"toolset_name":"kubernetes/core","tool_name":"kubectl_get_yaml","match_params":{"kind":"pod","name":"frontend-service","namespace":"default"}}
{"schema_version": "robusta:v1.0.0", "status": "success", "error": null, "return_code": 0, "data": null, "url": null, "invocation": "kubectl get -o yaml pod frontend-service -n default", "params": {"kind": "pod", "name": "frontend-service", "namespace": "default"}}
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"name":"frontend-service","namespace":"default"},"spec":{"containers":[{"command":["stress","--cpu","100"],"image":"jfusterm/stress","imagePullPolicy":"IfNotPresent","name":"stress","resources":{"limits":{"cpu":"10m","memory":"64Mi"},"requests":{"cpu":"10m","memory":"64Mi"}}}]}}
  creationTimestamp: "2025-05-29T08:46:14Z"
  name: frontend-service
  namespace: default
  resourceVersion: "1240309"
  uid: cfbbc782-ee67-4367-829c-886e99aa3533
spec:
  containers:
  - command:
    - stress
    - --cpu
    - "100"
    image: jfusterm/stress
    imagePullPolicy: IfNotPresent
    name: stress
    resources:
      limits:
        cpu: 10m
        memory: 64Mi
      requests:
        cpu: 10m
        memory: 64Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-wjmr8
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: kind-double-node-worker
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-wjmr8
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2025-05-29T08:46:31Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2025-05-29T08:46:14Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2025-05-29T08:46:31Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2025-05-29T08:46:31Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2025-05-29T08:46:14Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://41a1ff3d1b34e4a0207bf038f70afd645812f80b9c3640a91c01620c99f28171
    image: docker.io/jfusterm/stress:latest
    imageID: sha256:95c477f06eefebe5ab343ce1b2dc80313dc79559067304f72b10a5a82bfb9179
    lastState: {}
    name: stress
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-05-29T08:46:30Z"
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-wjmr8
      readOnly: true
      recursiveReadOnly: Disabled
  hostIP: 172.18.0.3
  hostIPs:
  - ip: 172.18.0.3
  phase: Running
  podIP: 10.244.1.70
  podIPs:
  - ip: 10.244.1.70
  qosClass: Guaranteed
  startTime: "2025-05-29T08:46:14Z"
