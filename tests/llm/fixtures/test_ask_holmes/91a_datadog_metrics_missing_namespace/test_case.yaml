description: |
  This test verifies that Holmes can query and display CPU/memory metrics from Datadog.
  The test first sends metrics to Datadog using their API (simulating a pod that existed previously),
  then asks Holmes to display graphs for that pod. Holmes should use the Datadog metrics API
  to retrieve and display the metrics, even if the pod doesn't currently exist in Kubernetes.

before_test: |
  # Send CPU and memory metrics to Datadog using their API
  bash ../../shared/send_datadog_metrics.sh space-projects spaceship-launch-counter spaceship-launch-counter

user_prompt:
  - "Can you show me a cpu graph of the spaceship-launch-counter pod in namespace space-projects?"
  - "Show me CPU metrics for spaceship-launch-counter in space-projects"
  - "Display spaceship-launch-counter pod CPU usage graph from space-projects namespace"
  - "I need to see the memory usage for spaceship-launch-counter in space-projects"
  - "What's the CPU utilization of the spaceship-launch-counter deployment in namespace space-projects?"
  - "Generate a memory graph for spaceship-launch-counter pods in space-projects"
  - "Show CPU and memory charts for spaceship-launch-counter in namespace space-projects"
  - "How much CPU is spaceship-launch-counter consuming in space-projects namespace?"
  - "Plot memory consumption of spaceship-launch-counter over time in space-projects"
  - "Can you visualize the resource usage for spaceship-launch-counter pod in the space-projects namespace?"
expected_output: |
  Output must contain 1 or more embeds in the following format
    <<{"type": "datadogql", "tool_name": "query_datadog_metrics", "random_key": "iD8G"}>>

  random_key may be different than the above example so long as its a random looking key, but all other parameters (type and tool_name) must be as described

  Output must NOT tell the user it doesn't have access to metrics or that they should use another tool

tags:
  - datadog

after_test: |
  # No cleanup needed - we only sent metrics to Datadog which don't need cleanup
