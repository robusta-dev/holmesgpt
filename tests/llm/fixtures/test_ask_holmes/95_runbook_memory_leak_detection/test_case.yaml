user_prompt: "Debug memory issues for my Python application orca in namespace app-95"

tags:
  - runbooks
  - toolset-limitation
  - hard

expected_output: |
  The orca application has a memory leak caused by:
  1. The ImageProcessor class stores all processed images in the self.processed_images list without ever clearing it
  2. The thumbnail_cache dictionary grows unbounded without any eviction policy
  3. Each processed image adds 0.5MB to 2MB to memory that is never released
  4. The application logs show it processes images continuously and tracks the growing cache size
  5. The pod will eventually be OOMKilled when it exceeds the 128Mi memory limit

  Recommended fixes:
  - Implement cache eviction (e.g., LRU cache with max size)
  - Process images in batches and clear the processed_images list
  - Use generators instead of storing all images in memory
  - Consider increasing memory limit if legitimate usage requires it

runbooks:
  catalog:
    - description: "Python Application Memory Troubleshooting"
      link: "python_memory_troubleshooting.md"
      update_date: "2025-07-01"

before_test: |
  kubectl create namespace app-95 || true
  kubectl apply -f manifest.yaml -n app-95
  sleep 30  # Let the Python app start and consume memory

after_test: |
  kubectl delete namespace app-95 --force --grace-period=0
