{
  "id": "b2ffd311-f339-46a2-b379-1e53eb0bc1ed",
  "symptom": "Signup service failing, users can't register",
  "title": "Signup Service Debugging Runbook",
  "instruction": "# Signup Service Debugging Runbook\n\n## Overview\nWhen the signup service is experiencing issues, the problem is often related to the payments service dependency. This runbook provides systematic debugging steps.\n\n## Step 1: Check Signup Service Status\n```bash\nkubectl get pods -l app=signup-service\nkubectl describe pod <signup-pod-name>\nkubectl logs <signup-pod-name>\n```\n\nLook for:\n- Pod status and restart count\n- Error messages in logs\n- Connection timeouts to payments service\n\n## Step 2: Verify Payments Service Health\n**CRITICAL**: Always check the payments service first when signup issues occur.\n\n```bash\nkubectl get pods -l app=payments-service\nkubectl describe pod <payments-pod-name>\nkubectl logs <payments-pod-name>\n```\n\nCommon payments service issues that affect signup:\n- Invalid Stripe API key causing authentication failures\n- Database connection issues in payments service\n- Payments service not responding to health checks\n- Resource constraints causing payments service to be unstable\n\n## Step 3: Test Service-to-Service Communication\n```bash\n# Test if signup can reach payments service\nkubectl exec -it <signup-pod-name> -- curl -v http://payments-service:8080/health\n\n# Check if payments service is responding\nkubectl port-forward svc/payments-service 8080:8080\ncurl http://localhost:8080/health\n```\n\n## Step 4: Check Payments Service Specific Issues\n\n### Stripe API Key Issues\n```bash\nkubectl logs <payments-pod-name> | grep -i stripe\nkubectl logs <payments-pod-name> | grep -i \"api key\"\n```\n\nLook for:\n- \"Invalid API key\" errors\n- \"Authentication failed\" messages\n- Stripe connection timeouts\n\n### Database Connection Issues\n```bash\nkubectl logs <payments-pod-name> | grep -i database\nkubectl logs <payments-pod-name> | grep -i postgres\n```\n\n## Step 5: Verify Environment Variables\n```bash\nkubectl exec <payments-pod-name> -- env | grep STRIPE\nkubectl exec <payments-pod-name> -- env | grep DATABASE\n```\n\n## Common Root Causes\n1. **Invalid Stripe API Key**: Payments service fails to initialize, causing signup to fail\n2. **Payments Service Crashlooping**: Due to database connectivity or API key issues\n3. **Network Issues**: Service-to-service communication problems\n4. **Resource Constraints**: Payments service running out of memory/CPU\n\n## Resolution Steps\n1. **Fix Stripe API Key**: Update the STRIPE_API_KEY environment variable\n2. **Restart Payments Service**: `kubectl rollout restart deployment/payments-service`\n3. **Check Database**: Ensure PostgreSQL is accessible from payments service\n4. **Scale Payments Service**: If resource constrained, increase replicas or resources\n\n## Prevention\n- Monitor payments service health independently\n- Set up alerts for payments service failures\n- Use proper health checks and circuit breakers\n- Implement retry logic in signup service for payments calls"
}
