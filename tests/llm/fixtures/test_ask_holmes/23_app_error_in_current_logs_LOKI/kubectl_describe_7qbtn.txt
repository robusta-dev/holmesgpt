{"toolset_name":"kubernetes/core","tool_name":"kubectl_describe","match_params":{"kind":"pod","name":"meme-deployment-74db7bc95c-7qbtn","namespace":"default"}}
stdout:
Name:             meme-deployment-74db7bc95c-7qbtn
Namespace:        default
Priority:         0
Service Account:  default
Node:             grafana-cloud-control-plane/172.18.0.2
Start Time:       Tue, 04 Mar 2025 13:44:26 +0100
Labels:           app=meme-app
                  pod-template-hash=74db7bc95c
Annotations:      <none>
Status:           Running
IP:               10.244.0.33
IPs:
  IP:           10.244.0.33
Controlled By:  ReplicaSet/meme-deployment-74db7bc95c
Containers:
  meme-app:
    Container ID:   containerd://afda88b6357a274a32757eab47f37ea44f15734ff297805916d6521b5cfefe0c
    Image:          pavangudiwada/meme-generator:latest
    Image ID:       docker.io/pavangudiwada/meme-generator@sha256:21250e3cba95966ad39cc48de55f25be25e840827eba81258fde2d45501e08f9
    Port:           5000/TCP
    Host Port:      0/TCP
    State:          Running
      Started:      Wed, 05 Mar 2025 07:01:59 +0100
    Last State:     Terminated
      Reason:       Unknown
      Exit Code:    255
      Started:      Tue, 04 Mar 2025 13:44:27 +0100
      Finished:     Wed, 05 Mar 2025 07:01:35 +0100
    Ready:          True
    Restart Count:  1
    Environment Variables from:
      meme-generator-config  ConfigMap  Optional: false
    Environment:             <none>
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-jgxml (ro)
Conditions:
  Type                        Status
  PodReadyToStartContainers   True
  Initialized                 True
  Ready                       True
  ContainersReady             True
  PodScheduled                True
Volumes:
  kube-api-access-jgxml:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:                      <none>

stderr:
