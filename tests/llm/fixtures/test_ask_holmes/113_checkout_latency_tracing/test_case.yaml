user_prompt:
- "The checkout service in namespace app-113 is experiencing high latency. Investigate using tracing data."
- "The checkout service in namespace app-113 is experiencing high latency. Investigate all traces over 0.1s in duration"

expected_output:
  - The checkout service has intermittent high latency affecting approximately 30% of requests
  - Root cause is missing database index on the shipping_rates table in Postgres
  - Slow queries occur when promo_code parameter is included in the request
  - Fast queries use index on zone_id, but queries with promo_code cause full table scan
  - Solution is to create compound index on (zone_id, promo_code, active)

tags:
  - database
  - kubernetes
  - medium

port_forwards:
  - namespace: app-113
    service: tempo
    local_port: 3200
    remote_port: 3200

before_test: |
  # Create namespace
  kubectl create namespace app-113 || true

  # Deploy Tempo from shared config
  kubectl apply -f ../../shared/tempo.yaml -n app-113
  echo "deployed tempo"

  # Deploy Postgres with initial schema
  kubectl apply -f postgres.yaml -n app-113
  kubectl wait --for=condition=ready pod -l app=postgres -n app-113 --timeout=60s
  echo "database pod ready"

  # Wait for database initialization to complete (init script runs automatically)
  sleep 10

  # Deploy microservices
  kubectl apply -f services.yaml -n app-113
  kubectl wait --for=condition=ready pod -l app=checkout -n app-113 --timeout=60s
  kubectl wait --for=condition=ready pod -l app=shipping-calculator -n app-113 --timeout=60s
  echo "microservices ready"

  # Wait for Tempo to be ready
  kubectl wait --for=condition=ready pod -l app=tempo -n app-113 --timeout=60s
  echo "Waiting for Tempo to be fully ready (internal initialization)..."
  sleep 25  # Tempo needs ~18s after pod ready for /ready endpoint to return 200
  echo "Tempo ready"

  # Run traffic generator job for 2 minutes of heavy load
  kubectl apply -f traffic-generator-job.yaml -n app-113
  kubectl wait --for=condition=complete job/traffic-generator -n app-113 --timeout=120s
  echo "Done generating traffic"

  # Verify traces are in Tempo using kubectl exec
  echo "Checking if traces were received by Tempo..."
  TRACE_COUNT=$(kubectl exec -n app-113 deployment/tempo -- curl -s 'http://localhost:3200/api/search?limit=1' 2>/dev/null | grep -o '"traces"' | wc -l || echo "0")

  if [ "$TRACE_COUNT" -eq "0" ]; then
    echo "WARNING: No traces found in Tempo (this might be timing related)"
    # Don't fail the test for this
  else
    echo "SUCCESS: Found traces in Tempo"
  fi

after_test: |
  kubectl delete namespace app-113 || true
