user_prompt: "I got an alert about topic messages in Kafka in namespace app-156 having lags. Why?"
description: |
  Test case demonstrating a chain of causation for Kafka latency:
  1. Order service produces messages to Kafka topic
  2. Analytics service consumes messages and writes them to OpenSearch
  3. OpenSearch has an "index optimizer" sidecar running continuous aggregation queries
  4. These queries consume excessive CPU, making OpenSearch writes slow
  5. Slow writes cause the analytics service to lag behind in consuming messages
  6. This consumer lag manifests as Kafka high latency alerts
tags:
  - kafka
  - chain-of-causation
  - hard
  - logs

expected_output:
- The Kafka high latency is caused by lag in the analytics-service consumer group.
- The analytics service is slow because it's writing messages to OpenSearch
- OpenSearch high CPU usage, causing writes to be extremely slow.
- The output should specifically mention the high CPU to be a major issue.

before_test: |
  kubectl apply -f ./app/kafka-mock-opensearch-manifest.yaml
  # Wait for all pods to be ready
  kubectl wait --for=condition=ready pod -l app=zookeeper -n app-156 --timeout=120s
  kubectl wait --for=condition=ready pod -l app=kafka -n app-156 --timeout=120s
  kubectl wait --for=condition=ready pod -l app=opensearch -n app-156 --timeout=180s
  # Start the order and analytics services
  kubectl wait --for=condition=ready pod -l app=order-service -n app-156 --timeout=120s
  kubectl wait --for=condition=ready pod -l app=analytics-service -n app-156 --timeout=120s
  # Verify setup (includes waiting for lag to build up)
  ./verify_setup.sh

after_test: kubectl delete -f ./app/kafka-mock-opensearch-manifest.yaml
