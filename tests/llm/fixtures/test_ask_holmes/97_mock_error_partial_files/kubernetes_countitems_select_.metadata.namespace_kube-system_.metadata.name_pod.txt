{"toolset_name":"kubernetes/core","tool_name":"kubernetes_count","match_params":{"kind":"pod","jq_expr":".items[] | select(.metadata.namespace == \"kube-system\") | .metadata.name"}}
{"schema_version": "robusta:v1.0.0", "status": "success", "error": null, "return_code": 0, "data": null, "url": null, "invocation": "echo \"Command executed: kubectl get pod --all-namespaces -o json | jq -c -r '.items[] | select(.metadata.namespace == \"kube-system\") | .metadata.name'\"\necho \"---\"\n\n# Execute the command and capture both stdout and stderr separately\ntemp_error=$(mktemp)\nmatches=$(kubectl get pod --all-namespaces -o json 2>\"$temp_error\" | jq -c -r '.items[] | select(.metadata.namespace == \"kube-system\") | .metadata.name' 2>>\"$temp_error\")\nexit_code=$?\nerror_output=$(cat \"$temp_error\")\nrm -f \"$temp_error\"\n\nif [ $exit_code -ne 0 ]; then\n  echo \"Error executing command (exit code: $exit_code):\"\n  echo \"$error_output\"\n  exit $exit_code\nelse\n  # Show any stderr warnings even if command succeeded\n  if [ -n \"$error_output\" ]; then\n    echo \"Warnings/stderr output:\"\n    echo \"$error_output\"\n    echo \"---\"\n  fi\n\n  # Filter out empty lines for accurate count\n  filtered_matches=$(echo \"$matches\" | grep -v '^$' | grep -v '^null$')\n  if [ -z \"$filtered_matches\" ]; then\n    count=0\n  else\n    count=$(echo \"$filtered_matches\" | wc -l)\n  fi\n  preview=$(echo \"$filtered_matches\" | head -n 10 | cut -c 1-200 | nl)\n\n  echo \"$count results\"\n  echo \"---\"\n  echo \"A *preview* of results is shown below (up to 10 results, up to 200 chars):\"\n  echo \"$preview\"\nfi", "params": {"kind": "pod", "jq_expr": ".items[] | select(.metadata.namespace == \"kube-system\") | .metadata.name"}}
Command executed: kubectl get pod --all-namespaces -o json | jq -c -r '.items[] | select(.metadata.namespace == kube-system) | .metadata.name'
---
      47 results
---
A *preview* of results is shown below (up to 10 results, up to 200 chars):
     1	calico-node-2c8vf
     2	calico-node-9fp6n
     3	calico-node-gx5hb
     4	calico-node-jrh8m
     5	calico-node-lfdg6
     6	calico-node-vertical-autoscaler-79bc4f4485-kqkfz
     7	calico-typha-54cfc5576c-mf9fs
     8	calico-typha-54cfc5576c-wkvn5
     9	calico-typha-horizontal-autoscaler-5cdd85f5f4-zvnsn
    10	calico-typha-vertical-autoscaler-86c48d49d-7v7h6
