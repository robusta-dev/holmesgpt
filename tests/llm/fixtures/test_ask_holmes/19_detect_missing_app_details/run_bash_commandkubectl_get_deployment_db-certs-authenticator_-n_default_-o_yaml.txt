{"toolset_name":"bash","tool_name":"run_bash_command","match_params":{"command":"kubectl get deployment db-certs-authenticator -n default -o yaml"}}
{"schema_version": "robusta:v1.0.0", "status": "success", "error": null, "return_code": 0, "url": null, "invocation": "kubectl get deployment db-certs-authenticator -n default -o yaml", "params": {"command": "kubectl get deployment db-certs-authenticator -n default -o yaml"}, "icon_url": null}
kubectl get deployment db-certs-authenticator -n default -o yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"flask"},"name":"db-certs-authenticator","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"flask"}},"template":{"metadata":{"labels":{"app":"flask"}},"spec":{"containers":[{"image":"us-central1-docker.pkg.dev/genuine-flight-317411/devel/flask-app:latest","name":"flask","ports":[{"containerPort":5000}],"volumeMounts":[{"mountPath":"/certs/certificate.pem","name":"cert-volume","subPath":"certificate.pem"},{"mountPath":"/certs/key.pem","name":"key-volume","subPath":"key.pem"},{"mountPath":"/certs","name":"writable-certs"}]}],"volumes":[{"configMap":{"items":[{"key":"certificate.pem","path":"certificate.pem"}],"name":"db-certs-config"},"name":"cert-volume"},{"configMap":{"items":[{"key":"key.pem","path":"key.pem"}],"name":"db-certs-config"},"name":"key-volume"},{"emptyDir":{},"name":"writable-certs"}]}}}}
  creationTimestamp: "2025-09-12T08:06:25Z"
  generation: 1
  labels:
    app: flask
  name: db-certs-authenticator
  namespace: default
  resourceVersion: "1611334"
  uid: f8b76ced-4522-4856-88aa-0a526f896be2
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: flask
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: flask
    spec:
      containers:
      - image: us-central1-docker.pkg.dev/genuine-flight-317411/devel/flask-app:latest
        imagePullPolicy: Always
        name: flask
        ports:
        - containerPort: 5000
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /certs/certificate.pem
          name: cert-volume
          subPath: certificate.pem
        - mountPath: /certs/key.pem
          name: key-volume
          subPath: key.pem
        - mountPath: /certs
          name: writable-certs
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: certificate.pem
            path: certificate.pem
          name: db-certs-config
        name: cert-volume
      - configMap:
          defaultMode: 420
          items:
          - key: key.pem
            path: key.pem
          name: db-certs-config
        name: key-volume
      - emptyDir: {}
        name: writable-certs
status:
  conditions:
  - lastTransitionTime: "2025-09-12T08:06:25Z"
    lastUpdateTime: "2025-09-12T08:06:56Z"
    message: ReplicaSet "db-certs-authenticator-6866469d97" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2025-09-26T10:51:23Z"
    lastUpdateTime: "2025-09-26T10:51:23Z"
    message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  observedGeneration: 1
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1
