user_prompt: "How many pods in namespace test-60 have restarted fewer than 3 times?"
expected_output:
  - either 6, 6 pods, etc.
before_test: |
  kubectl apply -f manifests.yaml
  # Wait for all pods to reach expected state with 90 second timeout
  count=0
  while [ $count -lt 45 ]; do  # 45 * 2 = 90 seconds
    # Check if all unstable pods have at least 3 restarts
    r1=$(kubectl get pod batch-processor-1 -n test-60 -o jsonpath="{.status.containerStatuses[0].restartCount}" 2>/dev/null || echo 0)
    r2=$(kubectl get pod batch-processor-2 -n test-60 -o jsonpath="{.status.containerStatuses[0].restartCount}" 2>/dev/null || echo 0)
    r3=$(kubectl get pod data-analyzer-1 -n test-60 -o jsonpath="{.status.containerStatuses[0].restartCount}" 2>/dev/null || echo 0)
    r4=$(kubectl get pod data-analyzer-2 -n test-60 -o jsonpath="{.status.containerStatuses[0].restartCount}" 2>/dev/null || echo 0)

    if [ "$r1" -ge 3 ] && [ "$r2" -ge 3 ] && [ "$r3" -ge 3 ] && [ "$r4" -ge 3 ]; then
      echo "All unstable pods have 3+ restarts"
      break
    fi

    echo "Waiting for unstable pods to restart... ($r1, $r2, $r3, $r4)"
    count=$((count + 1))
    sleep 2
  done

  # Check if we timed out
  if [ $count -eq 45 ]; then
    echo "ERROR: Timeout waiting for pods to reach expected restart counts"
    exit 1
  fi

  # Verify stable pods have 0 restarts
  kubectl get pod stable-web-1 -n test-60 -o jsonpath='{.status.containerStatuses[0].restartCount}' | grep -E "^0$" || exit 1
  kubectl get pod stable-web-2 -n test-60 -o jsonpath='{.status.containerStatuses[0].restartCount}' | grep -E "^0$" || exit 1
  kubectl get pod stable-api-1 -n test-60 -o jsonpath='{.status.containerStatuses[0].restartCount}' | grep -E "^0$" || exit 1
  kubectl get pod stable-api-2 -n test-60 -o jsonpath='{.status.containerStatuses[0].restartCount}' | grep -E "^0$" || exit 1
  kubectl get pod stable-db-1 -n test-60 -o jsonpath='{.status.containerStatuses[0].restartCount}' | grep -E "^0$" || exit 1
  kubectl get pod stable-worker-1 -n test-60 -o jsonpath='{.status.containerStatuses[0].restartCount}' | grep -E "^0$" || exit 1

after_test: |
  kubectl delete -f manifests.yaml --ignore-not-found=true
tags:
  - counting
  - easy
