apiVersion: v1
kind: Namespace
metadata:
  name: namespace-84
---
# Backend deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: namespace-84
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
        tier: backend
    spec:
      containers:
      - name: backend
        image: nginx:alpine
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "10m"
          limits:
            memory: "64Mi"
---
# Backend service
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: namespace-84
spec:
  selector:
    app: backend
  ports:
  - port: 80
    targetPort: 80
---
# Frontend deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: namespace-84
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        tier: frontend
    spec:
      containers:
      - name: frontend
        image: busybox
        command: ["/bin/sh"]
        args:
        - -c
        - |
          while true; do
            echo "Trying to connect to backend-service..."
            if wget -O- http://backend-service:80 -T 5; then
              echo "Success!"
            else
              echo "ERROR: Connection timeout to backend-service!"
            fi
            sleep 15
          done
        resources:
          requests:
            memory: "64Mi"
            cpu: "10m"
          limits:
            memory: "64Mi"
---
# Network Policy that blocks frontend->backend traffic
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: backend-network-policy
  namespace: namespace-84
spec:
  podSelector:
    matchLabels:
      app: backend
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          tier: backend  # Only allows traffic from pods with tier=backend
    ports:
    - protocol: TCP
      port: 80
