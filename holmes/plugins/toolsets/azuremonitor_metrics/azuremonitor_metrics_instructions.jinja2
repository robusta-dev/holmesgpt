You have access to Azure Monitor Metrics tools for querying Azure Monitor managed Prometheus metrics from AKS clusters. This toolset is designed to work from external environments (like local development machines) and connects to AKS clusters remotely via Azure APIs.

## Available Tools:
{% for tool_name in tool_names %}
- {{ tool_name }}
{% endfor %}

## Key Capabilities:
- Connect to AKS clusters from any environment with proper Azure credentials
- Auto-discover AKS cluster configuration using Azure Resource Graph
- Check if Azure Monitor managed Prometheus is enabled for specified clusters
- Execute PromQL queries against Azure Monitor workspaces with automatic cluster filtering
- Query both instant values and time-series data ranges
- Support manual configuration for specific clusters

## Important Usage Guidelines:

### 1. Configuration and Setup:
The toolset works in two modes:
- **Auto-detection**: Attempts to discover available AKS clusters using Azure credentials
- **Manual configuration**: Uses explicitly configured cluster details from config.yaml

### 2. Setup Workflow:
To get started:
1. Ensure Azure credentials are configured (az login or environment variables)
2. Run `check_azure_monitor_prometheus_enabled` to verify and configure the cluster
3. Execute Prometheus queries once the workspace is configured

### 2. Automatic Cluster Filtering:
- All PromQL queries are automatically filtered by the cluster name using the "cluster" label
- This ensures queries only return metrics for the current AKS cluster
- You can disable auto-filtering by setting `auto_cluster_filter: false` if needed
- The cluster filtering helps avoid confusion when multiple clusters send metrics to the same Azure Monitor workspace

### 3. Query Types:
- Use `execute_azuremonitor_prometheus_query` for instant/current values
- Use `execute_azuremonitor_prometheus_range_query` for time-series data and trends
- Always provide meaningful descriptions for queries to help with analysis

### 4. Error Handling:
- If Azure Monitor managed Prometheus is not enabled, guide the user to enable it in Azure portal
- If no cluster is specified, suggest providing cluster_resource_id or configuring it in config.yaml
- If queries return no data, check if the metric exists and cluster filtering is correct
- For authentication issues, verify Azure credentials and permissions

### 5. Common AKS Metrics to Query:
- `container_cpu_usage_seconds_total` - CPU usage by containers
- `container_memory_working_set_bytes` - Memory usage by containers  
- `kube_pod_status_phase` - Pod status information
- `kube_node_status_condition` - Node health status
- `container_fs_usage_bytes` - Filesystem usage
- `kube_deployment_status_replicas` - Deployment replica status

### 6. Troubleshooting Scenarios:
When investigating AKS issues, consider querying:
- Resource utilization (CPU, memory, disk)
- Pod and node health status
- Application-specific metrics
- Infrastructure metrics
- Network metrics

### 7. Time Range Considerations:
- Default time span is 1 hour for range queries
- Adjust time ranges based on when issues occurred
- Use appropriate step intervals for range queries (e.g., 60s for detailed analysis)

{% if config and config.cluster_name %}
### Current Configuration:
- Cluster Name: {{ config.cluster_name }}
{% if config.azure_monitor_workspace_endpoint %}
- Azure Monitor Endpoint: {{ config.azure_monitor_workspace_endpoint }}
{% endif %}
{% endif %}

Remember: Azure Monitor managed Prometheus must be enabled on the AKS cluster for these tools to work. The toolset can work from any environment with proper Azure credentials and cluster configuration. See AZURE_MONITOR_SETUP_GUIDE.md for detailed setup instructions when running from external environments.
