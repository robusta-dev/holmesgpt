import re

# Regex patterns for validating AWS CLI parameters
SAFE_AWS_RESOURCE_NAME_PATTERN = re.compile(r"^[a-zA-Z0-9][a-zA-Z0-9\-_.:/]*$")
SAFE_AWS_REGION_PATTERN = re.compile(r"^[a-z]{2,3}-[a-z]+-[0-9]+$")
SAFE_AWS_ARN_PATTERN = re.compile(
    r"^arn:aws:[a-zA-Z0-9\-]+:[a-z0-9\-]*:[0-9]*:[a-zA-Z0-9\-_/:.]+$"
)
SAFE_AWS_INSTANCE_ID_PATTERN = re.compile(r"^i-[a-f0-9]{8,17}$")
SAFE_AWS_VPC_ID_PATTERN = re.compile(r"^vpc-[a-f0-9]{8,17}$")
SAFE_AWS_SUBNET_ID_PATTERN = re.compile(r"^subnet-[a-f0-9]{8,17}$")
SAFE_AWS_SG_ID_PATTERN = re.compile(r"^sg-[a-f0-9]{8,17}$")
SAFE_AWS_S3_BUCKET_PATTERN = re.compile(r"^[a-z0-9][a-z0-9\-\.]{1,61}[a-z0-9]$")
SAFE_AWS_LAMBDA_NAME_PATTERN = re.compile(r"^[a-zA-Z0-9\-_\.]{1,140}$")

# Safe AWS services and their allowed operations
SAFE_AWS_SERVICES = {
    # Compute services
    "ec2": {
        "describe-instances",
        "describe-images",
        "describe-volumes",
        "describe-snapshots",
        "describe-security-groups",
        "describe-subnets",
        "describe-vpcs",
        "describe-internet-gateways",
        "describe-route-tables",
        "describe-network-acls",
        "describe-nat-gateways",
        "describe-addresses",
        "describe-key-pairs",
        "describe-availability-zones",
        "describe-regions",
        "describe-instance-types",
        "describe-instance-attribute",
        "describe-instance-status",
        "describe-placement-groups",
        "describe-reserved-instances",
        "describe-spot-instances",
        "describe-spot-price-history",
        "describe-elastic-gpus",
        "describe-capacity-reservations",
        "describe-launch-templates",
        "describe-launch-template-versions",
        "describe-fleet-instances",
        "describe-fleets",
        "get-console-output",
        "get-console-screenshot",
        "get-instance-uefi-data",
        "list-images-in-recycle-bin",
        "list-snapshots-in-recycle-bin",
    },
    "lambda": {
        "list-functions",
        "list-layers",
        "list-layer-versions",
        "list-versions-by-function",
        "list-aliases",
        "get-function",
        "get-function-configuration",
        "get-layer-version",
        "get-alias",
        "get-policy",
        "get-account-settings",
        "get-event-source-mapping",
        "list-event-source-mappings",
        "get-function-code-signing-config",
        "get-code-signing-config",
        "list-code-signing-configs",
        "list-function-event-invoke-configs",
        "get-function-event-invoke-config",
        "get-provisioned-concurrency-config",
        "list-provisioned-concurrency-configs",
    },
    "ecs": {
        "list-clusters",
        "list-services",
        "list-tasks",
        "list-container-instances",
        "list-task-definitions",
        "list-task-definition-families",
        "describe-clusters",
        "describe-services",
        "describe-tasks",
        "describe-task-definition",
        "describe-container-instances",
        "describe-capacity-providers",
        "list-capacity-providers",
        "list-attributes",
        "list-tags-for-resource",
    },
    # Storage services
    "s3": {
        "list-buckets",
        "list-objects",
        "list-objects-v2",
        "head-bucket",
        "head-object",
        "get-bucket-location",
        "get-bucket-versioning",
        "get-bucket-tagging",
        "get-bucket-policy-status",
        "get-bucket-encryption",
        "get-bucket-cors",
        "get-bucket-website",
        "get-bucket-lifecycle",
        "get-bucket-lifecycle-configuration",
        "get-bucket-replication",
        "get-bucket-request-payment",
        "get-bucket-notification",
        "get-bucket-notification-configuration",
        "get-bucket-inventory-configuration",
        "list-bucket-inventory-configurations",
        "get-bucket-metrics-configuration",
        "list-bucket-metrics-configurations",
        "get-bucket-analytics-configuration",
        "list-bucket-analytics-configurations",
        "get-bucket-intelligent-tiering-configuration",
        "list-bucket-intelligent-tiering-configurations",
        "get-object-attributes",
        "get-object-legal-hold",
        "get-object-lock-configuration",
        "get-object-retention",
        "get-object-tagging",
        "get-object-torrent",
        "list-multipart-uploads",
        "list-object-versions",
        "list-parts",
    },
    "s3api": {
        "list-buckets",
        "list-objects",
        "list-objects-v2",
        "head-bucket",
        "head-object",
        "get-bucket-location",
        "get-bucket-versioning",
        "get-bucket-tagging",
        "get-bucket-policy-status",
        "get-bucket-encryption",
        "get-bucket-cors",
        "get-bucket-website",
        "get-bucket-lifecycle",
        "get-bucket-lifecycle-configuration",
        "get-bucket-replication",
        "get-bucket-request-payment",
        "get-bucket-notification",
        "get-bucket-notification-configuration",
        "get-bucket-inventory-configuration",
        "list-bucket-inventory-configurations",
        "get-bucket-metrics-configuration",
        "list-bucket-metrics-configurations",
        "get-bucket-analytics-configuration",
        "list-bucket-analytics-configurations",
        "get-bucket-intelligent-tiering-configuration",
        "list-bucket-intelligent-tiering-configurations",
        "get-object-attributes",
        "get-object-legal-hold",
        "get-object-lock-configuration",
        "get-object-retention",
        "get-object-tagging",
        "get-object-torrent",
        "list-multipart-uploads",
        "list-object-versions",
        "list-parts",
    },
    "ebs": {
        "describe-volumes",
        "describe-volume-status",
        "describe-volume-attribute",
        "describe-snapshots",
        "describe-snapshot-attribute",
        "describe-fast-snapshot-restores",
        "list-snapshots-in-recycle-bin",
    },
    # Database services
    "rds": {
        "describe-db-instances",
        "describe-db-clusters",
        "describe-db-snapshots",
        "describe-db-cluster-snapshots",
        "describe-db-parameter-groups",
        "describe-db-cluster-parameter-groups",
        "describe-db-parameters",
        "describe-db-cluster-parameters",
        "describe-db-subnet-groups",
        "describe-db-security-groups",
        "describe-option-groups",
        "describe-db-log-files",
        "describe-db-engine-versions",
        "describe-reserved-db-instances",
        "describe-reserved-db-instances-offerings",
        "describe-event-categories",
        "describe-event-subscriptions",
        "describe-events",
        "describe-pending-maintenance-actions",
        "describe-certificates",
        "describe-account-quotas",
        "describe-orderable-db-instance-options",
        "describe-valid-db-instance-modifications",
        "list-tags-for-resource",
    },
    "dynamodb": {
        "list-tables",
        "describe-table",
        "describe-time-to-live",
        "describe-continuous-backups",
        "describe-backup",
        "list-backups",
        "describe-global-table",
        "list-global-tables",
        "describe-global-table-settings",
        "describe-limits",
        "describe-endpoints",
        "list-tags-of-resource",
        "describe-contributor-insights",
        "list-contributor-insights",
        "describe-kinesis-streaming-destination",
        "describe-table-replica-auto-scaling",
        "describe-stream",
        "list-streams",
    },
    # Monitoring and logging
    "cloudwatch": {
        "list-metrics",
        "get-metric-statistics",
        "get-metric-data",
        "describe-alarms",
        "describe-alarm-history",
        "describe-anomaly-detectors",
        "get-dashboard",
        "list-dashboards",
        "list-tags-for-resource",
        "get-insight-selectors",
        "get-metric-widget-image",
        "describe-insight-rules",
    },
    "logs": {
        "describe-destinations",
        "describe-export-tasks",
        "describe-log-groups",
        "describe-log-streams",
        "describe-metric-filters",
        "describe-queries",
        "describe-resource-policies",
        "describe-subscription-filters",
        "get-log-events",
        "filter-log-events",
        "get-query-results",
        "list-tags-log-group",
        "test-metric-filter",
    },
    "cloudtrail": {
        "describe-trails",
        "get-trail-status",
        "list-public-keys",
        "list-tags",
        "lookup-events",
        "get-insight-selectors",
        "get-event-selectors",
        "describe-query",
        "list-queries",
        "get-query-results",
    },
    # Networking
    "elbv2": {
        "describe-load-balancers",
        "describe-listeners",
        "describe-listener-certificates",
        "describe-rules",
        "describe-target-groups",
        "describe-target-health",
        "describe-target-group-attributes",
        "describe-load-balancer-attributes",
        "describe-ssl-policies",
        "describe-account-limits",
        "list-tags-for-resource",
    },
    "elb": {
        "describe-load-balancers",
        "describe-load-balancer-attributes",
        "describe-load-balancer-policies",
        "describe-load-balancer-policy-types",
        "describe-instance-health",
        "describe-account-limits",
        "list-tags-for-resource",
    },
    "route53": {
        "list-hosted-zones",
        "list-resource-record-sets",
        "get-hosted-zone",
        "get-hosted-zone-count",
        "get-health-check",
        "list-health-checks",
        "get-health-check-count",
        "get-health-check-status",
        "get-health-check-last-failure-reason",
        "list-tags-for-resource",
        "list-tags-for-resources",
        "get-change",
        "list-geo-locations",
        "get-geo-location",
        "get-account-limit",
        "get-hosted-zone-limit",
        "list-vpc-association-authorizations",
        "list-query-logging-configs",
        "get-query-logging-config",
        "get-dnssec",
        "list-cidr-blocks",
        "list-cidr-collections",
        "list-cidr-locations",
        "get-cidr-collection",
    },
    "cloudfront": {
        "list-distributions",
        "get-distribution",
        "get-distribution-config",
        "list-streaming-distributions",
        "get-streaming-distribution",
        "get-streaming-distribution-config",
        "list-cloud-front-origin-access-identities",
        "get-cloud-front-origin-access-identity",
        "get-cloud-front-origin-access-identity-config",
        "list-invalidations",
        "get-invalidation",
        "list-tags-for-resource",
    },
    # Identity and Access
    "iam": {
        "list-users",
        "list-groups",
        "list-roles",
        "list-policies",
        "list-attached-user-policies",
        "list-attached-group-policies",
        "list-attached-role-policies",
        "list-user-policies",
        "list-group-policies",
        "list-role-policies",
        "get-user",
        "get-group",
        "get-role",
        "get-policy",
        "get-policy-version",
        "list-policy-versions",
        "get-account-summary",
        "get-account-password-policy",
        "list-entities-for-policy",
        "list-groups-for-user",
        "simulate-custom-policy",
        "simulate-principal-policy",
        "get-context-keys-for-custom-policy",
        "get-context-keys-for-principal-policy",
        "list-mfa-devices",
        "list-virtual-mfa-devices",
        "list-ssh-public-keys",
        "get-ssh-public-key",
        "list-service-specific-credentials",
        "list-access-keys",
        "list-signing-certificates",
        "get-login-profile",
        "generate-credential-report",
        "get-credential-report",
        "generate-service-last-accessed-details",
        "get-service-last-accessed-details",
        "get-service-last-accessed-details-with-entities",
        "list-policies-granting-service-access",
        "list-instance-profiles",
        "get-instance-profile",
        "list-instance-profiles-for-role",
        "list-open-id-connect-providers",
        "get-open-id-connect-provider",
        "list-saml-providers",
        "get-saml-provider",
        "list-server-certificates",
        "get-server-certificate",
        "get-account-authorization-details",
        "list-tags-for-user",
        "list-tags-for-role",
    },
    # Systems Manager
    "ssm": {
        "describe-instance-information",
        "describe-instance-associations-status",
        "describe-instance-patch-states",
        "describe-instance-patch-states-for-patch-group",
        "describe-parameters",
        "get-parameter",
        "get-parameters",
        "get-parameters-by-path",
        "describe-document-parameters",
        "describe-document-permission",
        "list-documents",
        "describe-document",
        "get-document",
        "list-associations",
        "describe-association",
        "describe-association-executions",
        "describe-association-execution-targets",
        "list-command-invocations",
        "list-commands",
        "get-command-invocation",
        "describe-automation-executions",
        "describe-automation-step-executions",
        "get-automation-execution",
        "describe-available-patches",
        "describe-effective-instance-associations",
        "describe-effective-patches-for-patch-group",
        "describe-inventory-deletions",
        "describe-maintenance-window-executions",
        "describe-maintenance-window-execution-task-invocations",
        "describe-maintenance-window-execution-tasks",
        "describe-maintenance-window-schedule",
        "describe-maintenance-window-targets",
        "describe-maintenance-window-tasks",
        "describe-maintenance-windows",
        "describe-maintenance-windows-for-target",
        "describe-ops-items",
        "get-ops-item",
        "describe-patch-baselines",
        "describe-patch-groups",
        "get-patch-baseline",
        "get-patch-baseline-for-patch-group",
        "describe-sessions",
        "get-connection-status",
        "list-compliance-items",
        "list-compliance-summaries",
        "list-resource-compliance-summaries",
        "list-resource-data-sync",
        "list-tags-for-resource",
        "get-calendar-state",
        "get-inventory",
        "get-inventory-schema",
        "list-inventory-entries",
        "describe-inventory-deletions",
        "get-ops-metadata",
        "list-ops-metadata",
        "get-service-setting",
        "list-document-versions",
        "describe-document",
    },
}

# Common safe output formats for AWS CLI
SAFE_AWS_OUTPUT_FORMATS = {"json", "text", "table", "yaml", "yaml-stream"}

# Safe global AWS CLI options/flags
SAFE_AWS_GLOBAL_FLAGS = {
    "--output",
    "--query",
    "--region",
    "--profile",
    "--cli-read-timeout",
    "--cli-connect-timeout",
    "--no-paginate",
    "--page-size",
    "--max-items",
    "--starting-token",
    "--no-cli-pager",
    "--color",
    "--no-color",
    "--debug",
    "--endpoint-url",
    "--no-verify-ssl",
    "--no-cli-auto-prompt",
    "--cli-auto-prompt",
    "--cli-binary-format",
    "--no-sign-request",
    "--help",
}

# Safe service-specific AWS CLI flags
SAFE_AWS_SERVICE_FLAGS = {
    # EC2 specific flags
    "--owners",
    "--image-ids",
    "--instance-ids",
    "--volume-ids",
    "--snapshot-ids",
    "--group-ids",
    "--subnet-ids",
    "--vpc-ids",
    "--allocation-ids",
    "--key-names",
    "--filters",
    "--dry-run",
    "--include-deprecated",
    "--executable-users",
    "--restorable-by-user-ids",
    "--snapshot-owners",
    "--group-names",
    "--instance-types",
    "--availability-zones",
    "--placement-groups",
    "--elastic-gpu-ids",
    "--capacity-reservation-ids",
    "--launch-template-ids",
    "--launch-template-names",
    "--fleet-ids",
    # S3 specific flags
    "--bucket",
    "--key",
    "--prefix",
    "--delimiter",
    "--encoding-type",
    "--marker",
    "--max-keys",
    "--fetch-owner",
    "--start-after",
    "--continuation-token",
    "--expected-bucket-owner",
    # Lambda specific flags
    "--function-name",
    "--function-version",
    "--layer-name",
    "--layer-version",
    "--alias-name",
    "--event-source-arn",
    "--uuid",
    "--marker",
    "--max-items",
    "--function-event-invoke-config",
    # RDS specific flags
    "--db-instance-identifier",
    "--db-cluster-identifier",
    "--db-snapshot-identifier",
    "--db-cluster-snapshot-identifier",
    "--db-parameter-group-name",
    "--db-cluster-parameter-group-name",
    "--parameter-group-name",
    "--parameter-group-family",
    "--db-engine-version",
    "--db-security-group-name",
    "--option-group-name",
    "--log-file-name",
    "--marker",
    "--max-records",
    "--source-type",
    "--event-categories",
    "--start-time",
    "--end-time",
    "--duration",
    "--source-identifier",
    # CloudWatch specific flags
    "--namespace",
    "--metric-name",
    "--dimensions",
    "--statistic",
    "--statistics",
    "--start-time",
    "--end-time",
    "--period",
    "--unit",
    "--alarm-names",
    "--alarm-name-prefix",
    "--state-value",
    "--action-prefix",
    "--max-records",
    "--next-token",
    "--metric-data-queries",
    "--scan-by",
    "--label-options",
    # CloudWatch Logs specific flags
    "--log-group-name",
    "--log-group-name-prefix",
    "--log-stream-name",
    "--log-stream-name-prefix",
    "--destination-name",
    "--export-task-id",
    "--task-name",
    "--filter-name",
    "--filter-pattern",
    "--interleaved",
    "--limit",
    "--start-from-head",
    "--query-id",
    "--query-string",
    "--log-group-names",
    "--resource-policy-name",
    "--subscription-filter-name",
    # ECS specific flags
    "--cluster",
    "--clusters",
    "--service",
    "--services",
    "--task-definition",
    "--task-definitions",
    "--task",
    "--tasks",
    "--container-instance",
    "--container-instances",
    "--family",
    "--status",
    "--include",
    "--sort",
    # IAM specific flags
    "--user-name",
    "--group-name",
    "--role-name",
    "--policy-name",
    "--policy-arn",
    "--path-prefix",
    "--marker",
    "--max-items",
    "--attachment-filter",
    "--scope",
    "--only-attached",
    "--policy-usage-filter",
    "--service-name",
    "--action-names",
    "--resource-arns",
    "--context-entries",
    "--caller-arn",
    "--resource-policy",
    "--resource-owner",
    "--resource-handling-option",
    "--access-key-id",
    "--serial-number",
    "--ssh-public-key-id",
    "--encoding",
    # Route53 specific flags
    "--hosted-zone-id",
    "--id",
    "--name",
    "--type",
    "--set-identifier",
    "--health-check-id",
    "--max-items",
    "--marker",
    "--delegation-set-id",
    "--vpc-id",
    "--vpc-region",
    "--tag-resource-id",
    "--tag-resource-type",
    # CloudFront specific flags
    "--id",
    "--distribution-id",
    "--streaming-distribution-id",
    "--origin-access-identity-id",
    "--invalidation-id",
    "--max-items",
    "--marker",
    # ELB specific flags
    "--load-balancer-arns",
    "--load-balancer-arn",
    "--load-balancer-names",
    "--load-balancer-name",
    "--target-group-arns",
    "--target-group-arn",
    "--listener-arns",
    "--listener-arn",
    "--rule-arns",
    "--rule-arn",
    "--names",
    "--page-size",
    "--marker",
    # DynamoDB specific flags
    "--table-name",
    "--table-names",
    "--exclusive-start-table-name",
    "--limit",
    "--backup-arn",
    "--time-range-lower-bound",
    "--time-range-upper-bound",
    "--backup-type",
    "--global-table-name",
    "--region-name",
    # SSM specific flags
    "--instance-information-filter-list",
    "--instance-id",
    "--filters",
    "--max-results",
    "--next-token",
    "--parameter-filters",
    "--parameter-names",
    "--path",
    "--recursive",
    "--parameter-hierarchy",
    "--with-decryption",
    "--name",
    "--version-stage",
    "--document-name",
    "--document-version",
    "--permission-type",
    "--command-id",
    "--instance-id",
    "--plugin-name",
    "--status",
    "--execution-id",
    "--step-name",
    "--automation-execution-id",
    "--step-execution-id",
    "--filters",
    "--classification",
    "--severity-levels",
    "--kb-number",
    "--operating-system",
    "--product",
    "--product-family",
    "--msrc-severity",
    "--patch-set",
}

# Blocked AWS services (these perform state changes or access sensitive data)
BLOCKED_AWS_SERVICES = {
    # Services that modify state
    "configure",
    "deploy",
    "s3-sync",
    # Services that can access secrets/sensitive data
    "secretsmanager",
    "kms",
    "ssm-get-parameter",  # Can access secrets in Parameter Store
    "sts",  # Can return credentials/tokens
    "cognito-identity",
    "cognito-idp",
    # Services that perform actions
    "ses",
    "sns",
    "sqs",
    "kinesis",
    "firehose",
    "glue",
    "athena",
    "redshift",
    "emr",
    "batch",
    "ecs-execute-command",  # Can execute commands in containers
}

# Blocked operations across all services (state-modifying actions)
BLOCKED_AWS_OPERATIONS = {
    # Create operations
    "create-*",
    "run-*",
    "start-*",
    "launch-*",
    "allocate-*",
    "associate-*",
    "attach-*",
    "authorize-*",
    "import-*",
    "register-*",
    # Modify operations
    "modify-*",
    "update-*",
    "put-*",
    "set-*",
    "replace-*",
    "reset-*",
    "configure-*",
    "enable-*",
    "disable-*",
    "change-*",
    "edit-*",
    "tag-*",
    "untag-*",
    # Delete operations
    "delete-*",
    "terminate-*",
    "stop-*",
    "cancel-*",
    "deregister-*",
    "detach-*",
    "disassociate-*",
    "remove-*",
    "revoke-*",
    "release-*",
    "deallocate-*",
    # Actions that can trigger changes
    "reboot-*",
    "restore-*",
    "copy-*",
    "move-*",
    "migrate-*",
    "promote-*",
    "failover-*",
    "reset-*",
    "rebuild-*",
    "resize-*",
    "scale-*",
    "invoke-*",  # Lambda invocations
    "send-*",  # SES/SNS sending
    "publish-*",  # SNS publishing
    "execute-*",  # Executing commands/queries
    # Sensitive data access
    "get-secret-*",
    "get-parameter-*",  # Can access sensitive SSM parameters
    "decrypt-*",
    "generate-*",
    "assume-*",
    "get-session-token",
    "get-federation-token",
    "get-caller-identity",
}
