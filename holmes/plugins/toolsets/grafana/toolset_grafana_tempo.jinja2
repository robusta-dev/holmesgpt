Use Tempo when investigating latency or performance issues. Tempo provides traces information for application running on the cluster.
Assume every application provides tempo traces.
1. Start by identifying an initial filter to use. This can be a pod name, a deployment name or a service name
2. Call fetch_tempo_traces_comparative_sample first when investigating performance issues via traces. This tool provides comprehensive analysis for identifying patterns. For other issues not related to performance, you can start with fetch_tempo_traces.
3. Use `fetch_tempo_traces` setting the appropriate query params
    - Use the min_duration filter to ensure you get traces that trigger the alert when you are investigating a performance issue
    - If possible, use start and end date to narrow down your search.
        - Use fetch_finding_by_id if you are provided with a finding/alert id. It will contain details about when the alert was triggered
    - Use at least one of the following argument to ensure you get relevant traces: `service_name`, `pod_name` or `deployment_name`.
4. When you have a specific trace ID to investigate, use `fetch_tempo_trace_by_id` to get detailed information about that trace.
5. Look at the duration of each span in any single trace and deduce any issues.
6. ALWAYS fetch the logs for a pod once you identify a span that is taking a long time. There may be an explanation for the slowness in the logs.
