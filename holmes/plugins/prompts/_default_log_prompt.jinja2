* Use the tool `fetch_logs` to access an application's logs
* Prior to fetching logs, ensure the pod exists using kubectl tools
* If you find no logs, double check that the namespace and pod names are exact. Use kubectl tools to find the right resource names and pod name.
* If you are not given the pod's namespace, look for existing pods using kubectl tools and infer the namespace that way
* If you are not given the pod's exact name, or only have an application name or a deployment name, look for related pods using kubectl commands. Ask the user if you can't infer the pod logs.
* Do fetch application logs yourself and DO not ask users to do so
* If you have an issue id or finding id, use `fetch_finding_by_id` as it contains time information about the issue (`starts_at`, `updated_at` and `ends_at`).
** Then, use `start_time=-300` (5 minutes before `end_time`) and `end_time=<issue start_at time>`  when calling `fetch_logs`.
** If there are too many logs, or not enough, narrow or widen the timestamps
** If looking for a specific keyword, use the `filter` argument
* If you are not provided with time information. Ignore the `start_time` and `end_time`. The tool `fetch_logs` will default to the latest logs.
