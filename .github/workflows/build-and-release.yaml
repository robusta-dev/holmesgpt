name: Build and Release

on:
  release:
    types: [ created ]

jobs:
  # Use the reusable workflow for building binaries
  build:
    uses: ./.github/workflows/build-template.yaml
    with:
      python-version: "3.11"
      python-versions-matrix: '["3.11"]'
      # We build on an older Ubuntu as pyinstaller binaries are forward-compatible not backwards-compatible
      # See https://pyinstaller.org/en/stable/usage.html?highlight=glibc#making-gnu-linux-apps-forward-compatible:~:text=The%20solution%20is%20to%20always%20build%20your%20app%20on%20the%20oldest%20version%20of%20GNU/Linux%20you%20mean%20to%20support.%20It%20should%20continue%20to%20work%20with%20the%20libc%20found%20on%20newer%20versions.
      # TODO: for similar reasons, we may want to build on older Windows/MacOS versions as well
      os-matrix: '["ubuntu-22.04", "windows-latest", "macos-latest"]'
      is-release: true
    secrets: inherit

  # Latest release check job
  check-latest:
    name: Check if Latest Release
    needs: build
    runs-on: ubuntu-22.04
    outputs:
      IS_LATEST: ${{ steps.check-latest.outputs.release == github.ref_name }}
    steps:
    - id: check-latest
      uses: pozetroninc/github-action-get-latest-release@v0.7.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.repository }}
        excludes: prerelease, draft

  # macOS hash calculation job
  mac-hash:
    name: Calculate macOS Hash
    needs: check-latest
    runs-on: ubuntu-latest
    if: needs.check-latest.outputs.IS_LATEST
    outputs:
      MAC_BUILD_HASH: ${{ steps.calc-hash.outputs.MAC_BUILD_HASH }}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Download MacOS artifact
      uses: actions/download-artifact@v4
      with:
        name: holmes-macos-latest-${{ github.ref_name }}
    - name: Calculate hash
      id: calc-hash
      run: echo "::set-output name=MAC_BUILD_HASH::$(sha256sum holmes-macos-latest-${{ github.ref_name }}.zip | awk '{print $1}')"

  # Linux hash calculation job
  linux-hash:
    name: Calculate Linux Hash
    needs: check-latest
    runs-on: ubuntu-latest
    if: needs.check-latest.outputs.IS_LATEST
    outputs:
      LINUX_BUILD_HASH: ${{ steps.calc-hash.outputs.LINUX_BUILD_HASH }}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Download Linux artifact
      uses: actions/download-artifact@v4
      with:
        name: holmes-ubuntu-22.04-${{ github.ref_name }}
    - name: Calculate hash
      id: calc-hash
      run: echo "::set-output name=LINUX_BUILD_HASH::$(sha256sum holmes-ubuntu-22.04-${{ github.ref_name }}.zip | awk '{print $1}')"

  # Homebrew formula update job
  update-formula:
    name: Update Homebrew Formula
    needs: [ mac-hash, linux-hash ]
    runs-on: ubuntu-latest
    if: ${{ !github.event.release.prerelease }}
    env:
      TAG_NAME: ${{ github.ref_name }}
    steps:
    - name: Checkout homebrew-holmesgpt repository
      uses: actions/checkout@v2
      with:
        repository: robusta-dev/homebrew-holmesgpt
        token: ${{ secrets.MULTIREPO_GITHUB_TOKEN }}
    - name: Update holmesgpt.rb formula
      run: |
        MAC_BUILD_HASH=${{ needs.mac-hash.outputs.MAC_BUILD_HASH }}
        LINUX_BUILD_HASH=${{ needs.linux-hash.outputs.LINUX_BUILD_HASH }}
        awk 'NR==6{$0="        url \"https://github.com/robusta-dev/holmesgpt/releases/download/'"$TAG_NAME"'/holmes-macos-latest-'"$TAG_NAME"'.zip\""}1' ./Formula/holmesgpt.rb > temp && mv temp ./Formula/holmesgpt.rb
        awk 'NR==7{$0="        sha256 \"'$MAC_BUILD_HASH'\""}1' ./Formula/holmesgpt.rb > temp && mv temp ./Formula/holmesgpt.rb
        awk 'NR==9{$0="        url \"https://github.com/robusta-dev/holmesgpt/releases/download/'"$TAG_NAME"'/holmes-ubuntu-22.04-'"$TAG_NAME"'.zip\""}1' ./Formula/holmesgpt.rb > temp && mv temp ./Formula/holmesgpt.rb
        awk 'NR==10{$0="        sha256 \"'$LINUX_BUILD_HASH'\""}1' ./Formula/holmesgpt.rb > temp && mv temp ./Formula/holmesgpt.rb
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -am "Update formula for release ${TAG_NAME}"
        git push
