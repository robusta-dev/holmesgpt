[tool.poetry]
name = "holmesgpt"
version = "0.0.0"
description = ""
authors = ["Natan Yellin <natan@robusta.dev>"]
readme = "README.md"
packages = [{ include = "holmes" }]

[tool.poetry.scripts]
holmes = "holmes.main:run"

[tool.poetry.dependencies]
python = "^3.10"
openai = "^1.6.1"
slack-bolt = "^1.18.1"
pydantic-settings = "^2.1.0"
pyyaml = "^6.0.1"
jinja2 = "^3.1.2"
typer = "^0.15.4"
python-benedict = "^0.33.1"
humanize = "^4.9.0"
rich = "^13.7.1"
pydash = "^8.0.1"
fastapi = "^0.115"
uvicorn = "^0.30"
pydantic = "^2.7"
supabase = "^2.5"
colorlog = "^6.8.2"
strenum = "^0.4.15"
markdown = "^3.6"
certifi = "^2024.7.4"
urllib3 = "^1.26.19"
boto3 = "^1.34.145"
setuptools = "^80.9.0"
aiohttp = "^3.10.2"
cachetools = "^5.5.0"
bs4 = "^0.0.2"
markdownify = "^1.1.0"
starlette = "^0.40"
google-api-python-client = "^2.156.0"
opensearch-py = "^2.8.0"
backoff = "^2.2.1"
litellm = "1.66.0"
sentry-sdk = {extras = ["fastapi"], version = "^2.20.0"}
confluent-kafka = "^2.6.1"
python_multipart = "^0.0.18"
kubernetes = "^32.0.1"
mcp = "v1.9.0"
prompt-toolkit = "^3.0.51"
azure-identity = "^1.23.0"
azure-core = "^1.34.0"
requests = "^2.32.4"
azure-mgmt-sql = "^3.0.1"
pyodbc = "^5.0.1"
azure-monitor-query = "^1.2.0"
azure-mgmt-monitor = "^6.0.2"
azure-mgmt-alertsmanagement = "^1.0.0"
azure-mgmt-resource = "^24.0.0"
azure-mgmt-resourcegraph = "^8.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-xdist = "^3.6.1"
ruff = "^0.7.3"
braintrust = "^0.1.2"
autoevals = "^0.0.129"
pre-commit = "^4.0.1"
responses = "^0.23.1"
freezegun = "^1.5.1"
mypy = "^1.16.0"
pytest-cov = "^6.2.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
ignore_missing_imports = true
scripts_are_modules = true
exclude = [
    "tests/llm/fixtures/.*",
]

[tool.pytest.ini_options]
markers = [
    "llm: Evaluate LLM behaviour (prompt, tools, etc.)",
    "datetime: Tests involving datetime functionality",
    "logs: Tests involving log processing",
    "context_window: Tests involving context window handling",
    "synthetic: Tests using synthetic data",
    "network: Tests requiring network connectivity",
    "runbooks: Tests involving runbook functionality",
    "misleading-history: Tests with misleading historical data",
    "k8s-misconfig: Tests involving Kubernetes misconfigurations",
    "chain-of-causation: Tests involving chain-of-causation analysis",
    "slackbot: Tests involving Slack bot functionality",
]
addopts = [
    "--cov-config=pyproject.toml",
    "--cov=holmes",
    "-rs",  # Show skip reasons by default
    "--tb=short",  # Show shorter tracebacks by default
    "--durations=5",  # Show 5 slowest tests after each run
]

[tool.coverage.run]
branch = true
omit = [
    "tests/*",
]

[tool.coverage.report]
fail_under = 38
